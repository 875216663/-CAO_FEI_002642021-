/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Applicant.Pet;
import Model.Business;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author caofei
 */
public class ViewPetJPanel extends javax.swing.JPanel {

     private Business business;
    DefaultTableModel appTableModel;
    Pet selectedPet;
    public ViewPetJPanel() {
        initComponents();
    }
    ViewPetJPanel(Business business) {
        initComponents();
        
        this.appTableModel = (DefaultTableModel) petCatalog.getModel();
        this.business = business;
        displayPetCatalog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldGender = new javax.swing.JTextField();
        fieldpetName = new javax.swing.JTextField();
        fieldAge = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldPetType = new javax.swing.JTextField();
        fieldBreed = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        petCatalog = new javax.swing.JTable();
        viewObservationbtn = new javax.swing.JButton();
        updateObservationbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(fieldGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 120, 40));

        fieldpetName.setEditable(false);
        fieldpetName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldpetNameFocusLost(evt);
            }
        });
        add(fieldpetName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 120, 40));
        add(fieldAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 120, 40));

        jLabel1.setText("GENDER");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, -1, -1));

        jLabel2.setText("PET NAME");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, -1, -1));

        jLabel3.setText("AGE");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, -1));

        fieldPetType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldPetTypeFocusLost(evt);
            }
        });
        add(fieldPetType, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 120, 40));
        add(fieldBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 120, 40));

        jLabel6.setText("PET TYPE");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, -1));

        jLabel7.setText("BREED");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, -1, -1));

        petCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PET NAME", "AGE", "GENDER", "PET TYPE", "BREED"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(petCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 410, 430));

        viewObservationbtn.setText("VIEW DETAILS");
        viewObservationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObservationbtnActionPerformed(evt);
            }
        });
        add(viewObservationbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, 120, 40));

        updateObservationbtn.setText("UPDATE ");
        updateObservationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateObservationbtnActionPerformed(evt);
            }
        });
        add(updateObservationbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 90, 40));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setText("VIEW  PET");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void fieldpetNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldpetNameFocusLost
        // TODO add your handling code here:
        String name = fieldpetName.getText();
        Boolean isUnique=this.business.getPetDirectory().checkIfPetUnique(name);
        if(isUnique) {

        } else {
            fieldpetName.setText("");
            JOptionPane.showMessageDialog(null, "Applicant already exists");
        }
    }//GEN-LAST:event_fieldpetNameFocusLost

    private void fieldPetTypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPetTypeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPetTypeFocusLost

    private void viewObservationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObservationbtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = petCatalog.getSelectedRow();
        if(selectedRow >= 0) {
            this.selectedPet = (Pet) petCatalog.getValueAt(selectedRow, 0);
            fieldpetName.setText(String.valueOf(selectedPet.getPetName()));
            fieldAge.setText(String.valueOf(selectedPet.getPetAge()));
            fieldBreed.setText(String.valueOf(selectedPet.getPetBreed()));
            fieldPetType.setText(String.valueOf(selectedPet.getPetType()));
            fieldGender.setText(String.valueOf(selectedPet.getPetGender()));

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        displayPetCatalog();
    }//GEN-LAST:event_viewObservationbtnActionPerformed

    private void updateObservationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateObservationbtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(!fieldpetName.getText().isEmpty()) {
            Pet p = this.business.getPetDirectory().findObservation(fieldpetName.getText());
            p.setPetName(fieldpetName.getText());
            p.setPetAge(Integer.valueOf(fieldAge.getText()));
            p.setPetBreed(fieldBreed.getText());
            p.setPetType(fieldPetType.getText());
            p.setPetGender(fieldGender.getText());

            JOptionPane.showMessageDialog(null, "Updated successfully");
        } else {
            JOptionPane.showMessageDialog(null, "You have not made any selection");
        }
        displayPetCatalog();

    }//GEN-LAST:event_updateObservationbtnActionPerformed
public void displayPetCatalog() {
        ArrayList<Pet> pet = this.business.getPetDirectory().getPetlist();
        
        if(pet.size() > 0) {
            appTableModel.setRowCount(0);
            for(Pet a: pet) {
                Object row[] = new Object[5];
                row[0] = a;
                row[1] = a.getPetAge();
                row[2] = a.getPetGender();
                row[3] = a.getPetType();
                row[4] = a.getPetBreed();
                appTableModel.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldAge;
    private javax.swing.JTextField fieldBreed;
    private javax.swing.JTextField fieldGender;
    private javax.swing.JTextField fieldPetType;
    private javax.swing.JTextField fieldpetName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable petCatalog;
    private javax.swing.JButton updateObservationbtn;
    private javax.swing.JButton viewObservationbtn;
    // End of variables declaration//GEN-END:variables
}
